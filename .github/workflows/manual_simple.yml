# This workflow automates the download of translated files from Lokalise  
# on a scheduled basis (every Friday at 09:00 UTC) or via manual trigger.  
#  
# Key actions:  
# 1. Fetches filtered translations (French, German, Spanish) with statuses:  
#    - Translated  
#    - Reviewed  
#    - Verified  
# 2. Uses the Lokalise API to export JSON files for the specified repository path.  
#  
# Secrets required:  
# - LOKALISE_PROJECT_ID: Lokalise project identifier  
# - LOKALISE_API_TOKEN: Authentication token for API access 

name: Get latest translation files manually

on:
  # allows to manually run the job at any time
  workflow_dispatch:
    inputs:
      languages:
        description: 'Lokalise API token'
        required: true
        default: "['fr', 'de', 'es']"
  # schedule:
  #   - cron: '0 9 * * fri'

jobs:
  makeRequest:
    runs-on: ubuntu-latest

    steps:
      - run: echo "Getting latest translation files from Lokalise"

      - name: Validate required secrets and environment variables
        env:
          LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
          LOKALISE_PROJECT_ID: ${{ vars.LOKALISE_PROJECT_ID }}
        run: |
          if [ -z "$LOKALISE_API_TOKEN" ]; then
            echo "LOKALISE_API_TOKEN is not set. For more details read https://google.com" && exit 1
          fi
          if [ -z "$LOKALISE_PROJECT_ID" ]; then
            echo "LOKALISE_PROJECT_ID is not set in the repository variables. For more details read https://google.com" && exit 1
          fi

      - name: Make request to external URI
        run: |
          myLangs=$(echo "${{ github.event.inputs.languages }}" | sed "s/\[//;s/\]//;s/'//g")
          myRepo=${{ github.repository }}
          myBranch=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          echo "myRepo value: $myRepo"
          echo "myBranch value: $myBranch"
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST \
          -H "X-Api-Token: ${{ env.LOKALISE_API_TOKEN }}" \
          -H "accept: application/json" \
          -H "content-type: application/json" \
          -d '{
            "format": "json",
            "filter_data": ["translated","reviewed","verified"],
            "filter_langs": ['"${myLangs//,/","}"'],
            "filter_repositories":["'"$myRepo"/tree/"$myBranch"/packages/pi-administration:"$myBranch""],
            "directory_prefix": "",
            "original_filenames": true,
            "triggers": [
            "github"
          ]}' \
          https://api.lokalise.com/api2/projects/${{ env.LOKALISE_PROJECT_ID }}/files/download)

          if [ "$RESPONSE" -ne 200 ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"Lokalise request failed with status code $RESPONSE\"}" \
              'https://smee.io/HMel3UU8fCNtlx7'
          fi